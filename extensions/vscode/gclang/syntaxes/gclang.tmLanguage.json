{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Guarded Command Language",
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#expression" },
		{ "include": "#control" },
		{ "include": "#variables" },

		{
			"match": "([_$]*[a-z][a-zA-Z0-9_$]*)(<|\\(|\\s+=>)",
			"captures": {
				"1": {
					"name": "entity.name.function.gclang"
				}
			}
		},
		{
			"name": "entity.name.function.gclang",
			"match": "\\b(print|local)\\b"
		},
		{
			"name": "entity.name.method",
			"match": "\\b(upb|lowb|size|upper|lower|delup|deldown|popup|popdown|swap|shift)\\b"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{"include": "#number"},
				{"include": "#paren-expression"},
				{"include": "#literals"},
				{"include": "#paren-expression"},
				{"include": "#paren-expression-array"}
			]
		},
		"number": {
			"name": "constant.numeric.gclang",
			"match": "(?<!\\$)\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b(?!\\$)"
		},
		"paren-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
			  "0": { "name": "punctuation.paren.open" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.paren.close" }
			},
			"name": "expression.group",
			"patterns": [{ "include": "#expression" }]
		},
		"paren-expression-condition": {
			"begin": "\\{",
			"end": "\\}",
			"beginCaptures": {
			  "0": { "name": "punctuation.paren.open" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.paren.close" }
			},
			"name": "expression.group"
		},
		"paren-expression-array": {
			"begin": "\\[",
			"end": "\\]",
			"beginCaptures": {
			  "0": { "name": "punctuation.paren.open" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.paren.close" }
			},
			"name": "expression.group",
			"patterns": [{ "include": "#expression" }]
		},
		"literals": {
			"name": "constant.language.gclang",
			"match": "(True|False)"
		},
		"comment": {
			"begin": "#",
			"end": "\\n",
			"name": "comment.line.number-sign"
		},
		"control": {
			"name": "keyword.control.gclang",
			"match": "\\b(if|fi|do|od)\\b"
		},
		"variables": {
			"name": "variable.name.gclang",
			"match": "(?<!\\$)\\b(this|super)\\b(?!\\$)"
		}
	},
	"scopeName": "source.gclang"
}