# Generated from Guarded.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\29")
        buf.write("\u0165\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\3")
        buf.write("\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n")
        buf.write("\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\6\"\u0108\n\"\r\"")
        buf.write("\16\"\u0109\3\"\3\"\3#\6#\u010f\n#\r#\16#\u0110\3#\3#")
        buf.write("\7#\u0115\n#\f#\16#\u0118\13#\5#\u011a\n#\3$\3$\3$\3$")
        buf.write("\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\7\'\u012f")
        buf.write("\n\'\f\'\16\'\u0132\13\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3")
        buf.write(",\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\65")
        buf.write("\3\66\3\66\3\66\3\66\3\67\3\67\38\38\78\u015f\n8\f8\16")
        buf.write("8\u0162\138\38\38\2\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64")
        buf.write("g\65i\66k\67m8o9\3\2\7\5\2\13\f\17\17\"\"\3\2\62;\5\2")
        buf.write("C\\aac|\6\2\62;C\\aac|\4\2\f\f\17\17\2\u016a\2\3\3\2\2")
        buf.write("\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2")
        buf.write("\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25")
        buf.write("\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3")
        buf.write("\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2")
        buf.write("\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2")
        buf.write("\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2")
        buf.write("9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2")
        buf.write("\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2")
        buf.write("\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2")
        buf.write("\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3")
        buf.write("\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i")
        buf.write("\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5")
        buf.write("s\3\2\2\2\7u\3\2\2\2\tw\3\2\2\2\13y\3\2\2\2\r{\3\2\2\2")
        buf.write("\17\u0080\3\2\2\2\21\u0086\3\2\2\2\23\u008c\3\2\2\2\25")
        buf.write("\u008f\3\2\2\2\27\u0092\3\2\2\2\31\u0095\3\2\2\2\33\u0098")
        buf.write("\3\2\2\2\35\u009b\3\2\2\2\37\u009e\3\2\2\2!\u00a0\3\2")
        buf.write("\2\2#\u00a2\3\2\2\2%\u00a8\3\2\2\2\'\u00ad\3\2\2\2)\u00b3")
        buf.write("\3\2\2\2+\u00ba\3\2\2\2-\u00c1\3\2\2\2/\u00c8\3\2\2\2")
        buf.write("\61\u00d0\3\2\2\2\63\u00da\3\2\2\2\65\u00e1\3\2\2\2\67")
        buf.write("\u00ea\3\2\2\29\u00f1\3\2\2\2;\u00fa\3\2\2\2=\u0100\3")
        buf.write("\2\2\2?\u0102\3\2\2\2A\u0104\3\2\2\2C\u0107\3\2\2\2E\u010e")
        buf.write("\3\2\2\2G\u011b\3\2\2\2I\u0120\3\2\2\2K\u0126\3\2\2\2")
        buf.write("M\u012c\3\2\2\2O\u0133\3\2\2\2Q\u0135\3\2\2\2S\u0137\3")
        buf.write("\2\2\2U\u0139\3\2\2\2W\u013b\3\2\2\2Y\u013d\3\2\2\2[\u013f")
        buf.write("\3\2\2\2]\u0142\3\2\2\2_\u0145\3\2\2\2a\u0148\3\2\2\2")
        buf.write("c\u014b\3\2\2\2e\u014e\3\2\2\2g\u0151\3\2\2\2i\u0153\3")
        buf.write("\2\2\2k\u0156\3\2\2\2m\u015a\3\2\2\2o\u015c\3\2\2\2qr")
        buf.write("\7*\2\2r\4\3\2\2\2st\7+\2\2t\6\3\2\2\2uv\7]\2\2v\b\3\2")
        buf.write("\2\2wx\7.\2\2x\n\3\2\2\2yz\7_\2\2z\f\3\2\2\2{|\7u\2\2")
        buf.write("|}\7m\2\2}~\7k\2\2~\177\7r\2\2\177\16\3\2\2\2\u0080\u0081")
        buf.write("\7c\2\2\u0081\u0082\7d\2\2\u0082\u0083\7q\2\2\u0083\u0084")
        buf.write("\7t\2\2\u0084\u0085\7v\2\2\u0085\20\3\2\2\2\u0086\u0087")
        buf.write("\7r\2\2\u0087\u0088\7t\2\2\u0088\u0089\7k\2\2\u0089\u008a")
        buf.write("\7p\2\2\u008a\u008b\7v\2\2\u008b\22\3\2\2\2\u008c\u008d")
        buf.write("\7<\2\2\u008d\u008e\7?\2\2\u008e\24\3\2\2\2\u008f\u0090")
        buf.write("\7/\2\2\u0090\u0091\7@\2\2\u0091\26\3\2\2\2\u0092\u0093")
        buf.write("\7k\2\2\u0093\u0094\7h\2\2\u0094\30\3\2\2\2\u0095\u0096")
        buf.write("\7h\2\2\u0096\u0097\7k\2\2\u0097\32\3\2\2\2\u0098\u0099")
        buf.write("\7f\2\2\u0099\u009a\7q\2\2\u009a\34\3\2\2\2\u009b\u009c")
        buf.write("\7q\2\2\u009c\u009d\7f\2\2\u009d\36\3\2\2\2\u009e\u009f")
        buf.write("\7}\2\2\u009f \3\2\2\2\u00a0\u00a1\7\177\2\2\u00a1\"\3")
        buf.write("\2\2\2\u00a2\u00a3\7\60\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5")
        buf.write("\7q\2\2\u00a5\u00a6\7y\2\2\u00a6\u00a7\7d\2\2\u00a7$\3")
        buf.write("\2\2\2\u00a8\u00a9\7\60\2\2\u00a9\u00aa\7w\2\2\u00aa\u00ab")
        buf.write("\7r\2\2\u00ab\u00ac\7d\2\2\u00ac&\3\2\2\2\u00ad\u00ae")
        buf.write("\7\60\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7k\2\2\u00b0")
        buf.write("\u00b1\7|\2\2\u00b1\u00b2\7g\2\2\u00b2(\3\2\2\2\u00b3")
        buf.write("\u00b4\7\60\2\2\u00b4\u00b5\7n\2\2\u00b5\u00b6\7q\2\2")
        buf.write("\u00b6\u00b7\7y\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7t")
        buf.write("\2\2\u00b9*\3\2\2\2\u00ba\u00bb\7\60\2\2\u00bb\u00bc\7")
        buf.write("w\2\2\u00bc\u00bd\7r\2\2\u00bd\u00be\7r\2\2\u00be\u00bf")
        buf.write("\7g\2\2\u00bf\u00c0\7t\2\2\u00c0,\3\2\2\2\u00c1\u00c2")
        buf.write("\7<\2\2\u00c2\u00c3\7u\2\2\u00c3\u00c4\7j\2\2\u00c4\u00c5")
        buf.write("\7k\2\2\u00c5\u00c6\7h\2\2\u00c6\u00c7\7v\2\2\u00c7.\3")
        buf.write("\2\2\2\u00c8\u00c9\7<\2\2\u00c9\u00ca\7r\2\2\u00ca\u00cb")
        buf.write("\7w\2\2\u00cb\u00cc\7u\2\2\u00cc\u00cd\7j\2\2\u00cd\u00ce")
        buf.write("\7w\2\2\u00ce\u00cf\7r\2\2\u00cf\60\3\2\2\2\u00d0\u00d1")
        buf.write("\7<\2\2\u00d1\u00d2\7r\2\2\u00d2\u00d3\7w\2\2\u00d3\u00d4")
        buf.write("\7u\2\2\u00d4\u00d5\7j\2\2\u00d5\u00d6\7f\2\2\u00d6\u00d7")
        buf.write("\7q\2\2\u00d7\u00d8\7y\2\2\u00d8\u00d9\7p\2\2\u00d9\62")
        buf.write("\3\2\2\2\u00da\u00db\7<\2\2\u00db\u00dc\7f\2\2\u00dc\u00dd")
        buf.write("\7g\2\2\u00dd\u00de\7n\2\2\u00de\u00df\7w\2\2\u00df\u00e0")
        buf.write("\7r\2\2\u00e0\64\3\2\2\2\u00e1\u00e2\7<\2\2\u00e2\u00e3")
        buf.write("\7f\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7n\2\2\u00e5\u00e6")
        buf.write("\7f\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8\7y\2\2\u00e8\u00e9")
        buf.write("\7p\2\2\u00e9\66\3\2\2\2\u00ea\u00eb\7<\2\2\u00eb\u00ec")
        buf.write("\7r\2\2\u00ec\u00ed\7q\2\2\u00ed\u00ee\7r\2\2\u00ee\u00ef")
        buf.write("\7w\2\2\u00ef\u00f0\7r\2\2\u00f08\3\2\2\2\u00f1\u00f2")
        buf.write("\7<\2\2\u00f2\u00f3\7r\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5")
        buf.write("\7r\2\2\u00f5\u00f6\7f\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8")
        buf.write("\7y\2\2\u00f8\u00f9\7p\2\2\u00f9:\3\2\2\2\u00fa\u00fb")
        buf.write("\7<\2\2\u00fb\u00fc\7u\2\2\u00fc\u00fd\7y\2\2\u00fd\u00fe")
        buf.write("\7c\2\2\u00fe\u00ff\7r\2\2\u00ff<\3\2\2\2\u0100\u0101")
        buf.write("\7<\2\2\u0101>\3\2\2\2\u0102\u0103\7?\2\2\u0103@\3\2\2")
        buf.write("\2\u0104\u0105\7=\2\2\u0105B\3\2\2\2\u0106\u0108\t\2\2")
        buf.write("\2\u0107\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u0107")
        buf.write("\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u010b\3\2\2\2\u010b")
        buf.write("\u010c\b\"\2\2\u010cD\3\2\2\2\u010d\u010f\t\3\2\2\u010e")
        buf.write("\u010d\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u010e\3\2\2\2")
        buf.write("\u0110\u0111\3\2\2\2\u0111\u0119\3\2\2\2\u0112\u0116\7")
        buf.write("\60\2\2\u0113\u0115\t\3\2\2\u0114\u0113\3\2\2\2\u0115")
        buf.write("\u0118\3\2\2\2\u0116\u0114\3\2\2\2\u0116\u0117\3\2\2\2")
        buf.write("\u0117\u011a\3\2\2\2\u0118\u0116\3\2\2\2\u0119\u0112\3")
        buf.write("\2\2\2\u0119\u011a\3\2\2\2\u011aF\3\2\2\2\u011b\u011c")
        buf.write("\7V\2\2\u011c\u011d\7t\2\2\u011d\u011e\7w\2\2\u011e\u011f")
        buf.write("\7g\2\2\u011fH\3\2\2\2\u0120\u0121\7H\2\2\u0121\u0122")
        buf.write("\7c\2\2\u0122\u0123\7n\2\2\u0123\u0124\7u\2\2\u0124\u0125")
        buf.write("\7g\2\2\u0125J\3\2\2\2\u0126\u0127\7n\2\2\u0127\u0128")
        buf.write("\7q\2\2\u0128\u0129\7e\2\2\u0129\u012a\7c\2\2\u012a\u012b")
        buf.write("\7n\2\2\u012bL\3\2\2\2\u012c\u0130\t\4\2\2\u012d\u012f")
        buf.write("\t\5\2\2\u012e\u012d\3\2\2\2\u012f\u0132\3\2\2\2\u0130")
        buf.write("\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131N\3\2\2\2\u0132")
        buf.write("\u0130\3\2\2\2\u0133\u0134\7,\2\2\u0134P\3\2\2\2\u0135")
        buf.write("\u0136\7\61\2\2\u0136R\3\2\2\2\u0137\u0138\7-\2\2\u0138")
        buf.write("T\3\2\2\2\u0139\u013a\7/\2\2\u013aV\3\2\2\2\u013b\u013c")
        buf.write("\7@\2\2\u013cX\3\2\2\2\u013d\u013e\7>\2\2\u013eZ\3\2\2")
        buf.write("\2\u013f\u0140\7@\2\2\u0140\u0141\7?\2\2\u0141\\\3\2\2")
        buf.write("\2\u0142\u0143\7>\2\2\u0143\u0144\7?\2\2\u0144^\3\2\2")
        buf.write("\2\u0145\u0146\7?\2\2\u0146\u0147\7?\2\2\u0147`\3\2\2")
        buf.write("\2\u0148\u0149\7#\2\2\u0149\u014a\7?\2\2\u014ab\3\2\2")
        buf.write("\2\u014b\u014c\7(\2\2\u014c\u014d\7(\2\2\u014dd\3\2\2")
        buf.write("\2\u014e\u014f\7~\2\2\u014f\u0150\7~\2\2\u0150f\3\2\2")
        buf.write("\2\u0151\u0152\7\u0080\2\2\u0152h\3\2\2\2\u0153\u0154")
        buf.write("\7@\2\2\u0154\u0155\7@\2\2\u0155j\3\2\2\2\u0156\u0157")
        buf.write("\7>\2\2\u0157\u0158\7?\2\2\u0158\u0159\7@\2\2\u0159l\3")
        buf.write("\2\2\2\u015a\u015b\7~\2\2\u015bn\3\2\2\2\u015c\u0160\7")
        buf.write("%\2\2\u015d\u015f\n\6\2\2\u015e\u015d\3\2\2\2\u015f\u0162")
        buf.write("\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161")
        buf.write("\u0163\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\b8\2\2")
        buf.write("\u0164p\3\2\2\2\t\2\u0109\u0110\u0116\u0119\u0130\u0160")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class GuardedLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    SEP = 32
    WHITESPACE = 33
    NUMBER = 34
    TRUE = 35
    FALSE = 36
    LOCAL_VARIABLE = 37
    ID = 38
    MUL = 39
    DIV = 40
    ADD = 41
    SUB = 42
    GT = 43
    LT = 44
    GE = 45
    LE = 46
    EQ = 47
    NEQ = 48
    AND = 49
    OR = 50
    NEG = 51
    IMPL = 52
    EQUIV = 53
    LOWER_BOUND_DELIMITER = 54
    LINE_COMMENT = 55

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "','", "']'", "'skip'", "'abort'", "'print'", 
            "':='", "'->'", "'if'", "'fi'", "'do'", "'od'", "'{'", "'}'", 
            "'.lowb'", "'.upb'", "'.size'", "'.lower'", "'.upper'", "':shift'", 
            "':pushup'", "':pushdown'", "':delup'", "':deldown'", "':popup'", 
            "':popdown'", "':swap'", "':'", "'='", "';'", "'True'", "'False'", 
            "'local'", "'*'", "'/'", "'+'", "'-'", "'>'", "'<'", "'>='", 
            "'<='", "'=='", "'!='", "'&&'", "'||'", "'~'", "'>>'", "'<=>'", 
            "'|'" ]

    symbolicNames = [ "<INVALID>",
            "SEP", "WHITESPACE", "NUMBER", "TRUE", "FALSE", "LOCAL_VARIABLE", 
            "ID", "MUL", "DIV", "ADD", "SUB", "GT", "LT", "GE", "LE", "EQ", 
            "NEQ", "AND", "OR", "NEG", "IMPL", "EQUIV", "LOWER_BOUND_DELIMITER", 
            "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "SEP", "WHITESPACE", 
                  "NUMBER", "TRUE", "FALSE", "LOCAL_VARIABLE", "ID", "MUL", 
                  "DIV", "ADD", "SUB", "GT", "LT", "GE", "LE", "EQ", "NEQ", 
                  "AND", "OR", "NEG", "IMPL", "EQUIV", "LOWER_BOUND_DELIMITER", 
                  "LINE_COMMENT" ]

    grammarFileName = "Guarded.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


